/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

import Clases.DatabaseConnection;
import Clases.EnviarCorreo;
import Clases.userClass;
import java.awt.BorderLayout;
import java.awt.Frame;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.*;

/**
 *
 * @author Axel Reyes
 */
public class frmPeticion extends javax.swing.JFrame {

    /**
     * Creates new form frmPeticion
     */
  
    public frmPeticion() {
        initComponents();
        lbUsuario.setText(userClass.getUsername());
         FechaActual();
         
         
         txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
                    @Override
                    public void keyReleased(java.awt.event.KeyEvent e) {
                        validarCantidad();
                    }
                });
                ((AbstractDocument) txtMotivo.getDocument()).setDocumentFilter(new LimiteTexto(200));

                txtMotivo.setLineWrap(true);
                txtMotivo.setWrapStyleWord(true);

                txtMotivo.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
                    private void actualizar() {
                        int limite = 200;
                        int actual = txtMotivo.getText().length();
                        lbMotivo.setText(actual + "/" + limite);
                    }

                    public void insertUpdate(javax.swing.event.DocumentEvent e) { actualizar(); }
                    public void removeUpdate(javax.swing.event.DocumentEvent e) { actualizar(); }
                    public void changedUpdate(javax.swing.event.DocumentEvent e) { actualizar(); }
                });
                
               





    }

    
private void cargarMotivosRecurrentes(int idProducto) {
    cmbMotivos.removeAllItems();
    cmbMotivos.setEnabled(false);

    try (Connection conn = DatabaseConnection.getConnection()) {
        String sql = "SELECT TOP 3 motivo, COUNT(*) AS cantidad " +
                     "FROM devoluciones WHERE id_producto = ? " +
                     "GROUP BY motivo ORDER BY cantidad DESC";
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setInt(1, idProducto);
        ResultSet rs = stmt.executeQuery();

        boolean hayMotivos = false;
        while (rs.next()) {
            cmbMotivos.addItem(rs.getString("motivo"));
            hayMotivos = true;
        }

        if (hayMotivos) {
            cmbMotivos.setEnabled(true);
        }

        stmt.close();
    } catch (SQLException e) {
        System.out.println("❌ Error al obtener motivos: " + e.getMessage());
    }
}
private void motivoSeleccionado() {
    if (cmbMotivos.getSelectedItem() != null) {
        String motivo = cmbMotivos.getSelectedItem().toString();
        txtMotivo.setText(motivo); // Reemplaza el contenido
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        PanelMenu = new javax.swing.JPanel();
        lbUsuario = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnMenu = new javax.swing.JButton();
        btnInventario = new javax.swing.JButton();
        btnPeticion = new javax.swing.JButton();
        btnProveedor = new javax.swing.JButton();
        btnReportes = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtProducto = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtProveedor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMotivo = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        btnEnviar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnImagen = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblImagen = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lbFecha = new javax.swing.JLabel();
        lbCantidad = new javax.swing.JLabel();
        lbMotivo = new javax.swing.JLabel();
        cmbMotivos = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PanelMenu.setBackground(new java.awt.Color(212, 238, 224));
        PanelMenu.setBorder(new javax.swing.border.MatteBorder(null));

        lbUsuario.setText("Axel Reyes");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/usuario.jpg"))); // NOI18N

        btnMenu.setText("Menu");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        btnInventario.setText("Invetario");
        btnInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventarioActionPerformed(evt);
            }
        });

        btnPeticion.setText("Peticion");
        btnPeticion.setEnabled(false);
        btnPeticion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPeticionActionPerformed(evt);
            }
        });

        btnProveedor.setText("Proveedores");
        btnProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProveedorActionPerformed(evt);
            }
        });

        btnReportes.setText("Reportes");
        btnReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportesActionPerformed(evt);
            }
        });

        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/iconSalir.jpg"))); // NOI18N
        btnCerrar.setText("  Cerrar Sesión");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelMenuLayout = new javax.swing.GroupLayout(PanelMenu);
        PanelMenu.setLayout(PanelMenuLayout);
        PanelMenuLayout.setHorizontalGroup(
            PanelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMenuLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel10))
            .addGroup(PanelMenuLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(lbUsuario))
            .addGroup(PanelMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPeticion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInventario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnProveedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReportes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        PanelMenuLayout.setVerticalGroup(
            PanelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelMenuLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel10)
                .addGap(13, 13, 13)
                .addComponent(lbUsuario)
                .addGap(51, 51, 51)
                .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPeticion, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnReportes, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.add(PanelMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 750));

        jPanel2.setBackground(new java.awt.Color(128, 202, 166));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Solicitud de Devolución");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(421, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(367, 367, 367))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(14, 14, 14))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1060, -1));

        jLabel1.setText("ID Producto");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, -1, -1));
        jPanel1.add(txtProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 410, -1));

        btnBuscar.setText("ok");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 130, 60, -1));

        jLabel3.setText("Nombre");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, -1, -1));
        jPanel1.add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 400, 250, -1));

        jLabel4.setText("Provedor");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 250, -1, -1));

        txtNombre.setEnabled(false);
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 280, 250, -1));

        jLabel6.setText("Cantidad");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 370, -1, -1));

        txtProveedor.setEnabled(false);
        jPanel1.add(txtProveedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 280, 250, -1));

        jLabel7.setText("Motivo");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 370, -1, -1));

        txtMotivo.setColumns(20);
        txtMotivo.setRows(5);
        jScrollPane1.setViewportView(txtMotivo);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 390, 260, -1));

        jLabel8.setText("Imagen");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 490, -1, -1));

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEnviar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 670, -1, -1));

        jButton3.setText("Cancelar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 670, -1, -1));

        btnImagen.setText("I");
        btnImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagenActionPerformed(evt);
            }
        });
        jPanel1.add(btnImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 550, 50, 30));

        jPanel3.setBackground(new java.awt.Color(204, 255, 204));

        lblImagen.setBackground(new java.awt.Color(204, 255, 204));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImagen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblImagen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 520, 170, 110));

        jLabel5.setText("Fecha");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 530, -1, -1));

        lbFecha.setText("    ");
        jPanel1.add(lbFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 530, 170, -1));
        jPanel1.add(lbCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 440, 250, 20));

        lbMotivo.setText("0/200");
        jPanel1.add(lbMotivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 480, 50, 20));

        cmbMotivos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cmbMotivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMotivosActionPerformed(evt);
            }
        });
        jPanel1.add(cmbMotivos, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 390, 20, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private void validarCantidad() {
    // Se obtiene y limpia el valor del campo de texto para la cantidad ingresada.
    String texto = txtCantidad.getText().trim(); 
    lbCantidad.setText("");
    if (!texto.matches("\\d+")) {
        lbCantidad.setText("Solo se permiten números.");
        return; // Termina la ejecución del método si la validación falla.
    }
    int cantidadIngresada = Integer.parseInt(texto);
    int idProducto;
    // Se intenta obtener y parsear el ID del producto desde el campo de texto correspondiente.
    try {
        idProducto = Integer.parseInt(txtProducto.getText().trim());
    } catch (NumberFormatException e) {
        lbCantidad.setText("ID de producto inválido.");
        return;
    }
    // Se establece una conexión con la base de datos utilizando DatabaseConnection.
    try (Connection conn = DatabaseConnection.getConnection()) {
        // Se prepara la consulta SQL para obtener la cantidad disponible del producto especificado.
        String sql = "SELECT cantidad_disponible FROM productos WHERE id_producto = ?";
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setInt(1, idProducto); // Se establece el parámetro en la consulta.
        // Se ejecuta la consulta y se obtiene el resultado.
        ResultSet rs = stmt.executeQuery();
        if (rs.next()) {
            int cantidadDisponible = rs.getInt("cantidad_disponible");
            // Se compara la cantidad ingresada con la cantidad disponible.
            if (cantidadIngresada > cantidadDisponible) {
                lbCantidad.setText("No hay suficiente stock. Máximo: " + cantidadDisponible);
            }
        } else {
            lbCantidad.setText("Producto no encontrado.");
        }
        // Se cierra la sentencia preparada.
        stmt.close();
    } catch (SQLException ex) {
        // Si ocurre una excepción SQL durante la conexión o la consulta, se informa al usuario.
        lbCantidad.setText("Error al verificar stock.");
    }
}



class LimiteTexto extends DocumentFilter {
    private int limite;

    public LimiteTexto(int limite) {
        this.limite = limite;
    }

    @Override
    public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
        if (fb.getDocument().getLength() + string.length() <= limite) {
            super.insertString(fb, offset, string, attr);
        }
    }

    @Override
    public void replace(FilterBypass fb, int offset, int length, String string, AttributeSet attr) throws BadLocationException {
        if (fb.getDocument().getLength() - length + string.length() <= limite) {
            super.replace(fb, offset, length, string, attr);
        }
    }
}

    
    private void FechaActual(){
              Date fechaActual = new Date();

        // Formatear la fecha
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String fechaFormateada = formatter.format(fechaActual);

        // Crear el JLabel con la fecha
         lbFecha.setText(fechaFormateada);
     }  
/*
    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        
    }//GEN-LAST:event_btnEnviarActionPerformed
*/
   private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {                                          
    String idProductoStr = txtProducto.getText().trim(); 
    String cantidadDanadaStr = txtCantidad.getText().trim();
    String motivo = txtMotivo.getText().trim();
    String nombreProveedor = txtProveedor.getText().trim(); 
    String nombreProducto = txtNombre.getText();

    if (idProductoStr.isEmpty() || cantidadDanadaStr.isEmpty() || motivo.isEmpty() || nombreProveedor.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
            int confirmacion = JOptionPane.showConfirmDialog(
                this,
                "¿Estás seguro de enviar la solicitud de devolución?",
                "Confirmar envío",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE
            );

            if (confirmacion != JOptionPane.YES_OPTION) {
                return; // El usuario canceló
            }
    // Crear y mostrar la ventana de carga
    VentanaCarga ventanaCarga = new VentanaCarga((Frame) SwingUtilities.getWindowAncestor(this), "Enviando solicitud...");
    SwingWorker<Void, Void> worker = new SwingWorker<Void, Void>() {
        @Override
        protected Void doInBackground() {
            try {
                int idProducto = Integer.parseInt(idProductoStr);
                int cantidadDanada = Integer.parseInt(cantidadDanadaStr);
                java.sql.Date fechaDevolucion = new java.sql.Date(System.currentTimeMillis());

                Connection conn = DatabaseConnection.getConnection();
                if (conn != null) {
                    String sqlObtenerProveedor = "SELECT id_proveedor FROM proveedores WHERE nombre_proveedor = ?";
                    PreparedStatement stmtObtenerProveedor = conn.prepareStatement(sqlObtenerProveedor);
                    stmtObtenerProveedor.setString(1, nombreProveedor);
                    ResultSet rsProveedor = stmtObtenerProveedor.executeQuery();

                    if (rsProveedor.next()) {
                        int idProveedor = rsProveedor.getInt("id_proveedor");

                        String sqlInsertarDevolucion = "INSERT INTO devoluciones (id_producto, fecha_devolucion, cantidad_danada, motivo, id_proveedor, imagen_url) VALUES (?, ?, ?, ?, ?, ?)";
                        PreparedStatement stmtInsertarDevolucion = conn.prepareStatement(sqlInsertarDevolucion);
                        stmtInsertarDevolucion.setInt(1, idProducto);
                        stmtInsertarDevolucion.setDate(2, fechaDevolucion);
                        stmtInsertarDevolucion.setInt(3, cantidadDanada);
                        stmtInsertarDevolucion.setString(4, motivo);
                        stmtInsertarDevolucion.setInt(5, idProveedor);
                        stmtInsertarDevolucion.setString(6, rutaImagen);

                        int filasAfectadas = stmtInsertarDevolucion.executeUpdate();
                        if (filasAfectadas > 0) {
                            EnviarCorreo.enviarCorreo(nombreProveedor, String.valueOf(idProducto), nombreProducto, String.valueOf(cantidadDanada), motivo, rutaImagen);
                            limpiarCampos();
                        } else {
                            JOptionPane.showMessageDialog(null, "Error al registrar la devolución.", "Error", JOptionPane.ERROR_MESSAGE);
                        }

                        stmtInsertarDevolucion.close();
                    } else {
                        JOptionPane.showMessageDialog(null, "Proveedor no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
                    }

                    stmtObtenerProveedor.close();
                    conn.close();
                } else {
                    JOptionPane.showMessageDialog(null, "Error al conectar con la base de datos.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Los campos de ID y cantidad deben ser números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error al registrar la devolución: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

            return null;
        }

        @Override
        protected void done() {
            ventanaCarga.dispose(); // Cerrar la ventana de carga
            JOptionPane.showMessageDialog(null, "Solicitud enviada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        }
    };

    worker.execute();
    ventanaCarga.setVisible(true); // Mostrar la ventana mientras se ejecuta en segundo plano
}
   

public class VentanaCarga extends JDialog {

    private JProgressBar barraProgreso;
    private JLabel lblMensaje;

    public VentanaCarga(Frame parent, String mensaje) {
        super(parent, "Procesando", true); // true = modal
        setLayout(new BorderLayout());

        lblMensaje = new JLabel(mensaje, SwingConstants.CENTER);
        barraProgreso = new JProgressBar();
        barraProgreso.setIndeterminate(true); // animación continua

        add(lblMensaje, BorderLayout.NORTH);
        add(barraProgreso, BorderLayout.CENTER);

        setSize(300, 100);
        setLocationRelativeTo(parent); // centrar
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
    }
}

    private void limpiarCampos() {
    // Limpiar todos los campos de texto
    txtProducto.setText("");
    txtNombre.setText("");
    txtProveedor.setText("");
    txtCantidad.setText("");
    txtMotivo.setText("");
    lblImagen.setIcon(null);
    lblImagen.setText("");
}
 
    private void btnImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagenActionPerformed
        // TODO add your handling code here:
        seleccionarImagen();
    }//GEN-LAST:event_btnImagenActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
            ProductosDialog dialog = new ProductosDialog(this, txtProducto, txtNombre, txtProveedor);
               dialog.setVisible(true);
               try {
               int idProducto = Integer.parseInt(txtProducto.getText().trim());
               cargarMotivosRecurrentes(idProducto);
           } catch (NumberFormatException e) {
               System.out.println("ID de producto inválido para buscar motivos.");
           }


    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        // TODO add your handling code here:
        frmMenu frm = new frmMenu();
        frm.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventarioActionPerformed
        frmProductos frm = new frmProductos();
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnInventarioActionPerformed

    private void btnPeticionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPeticionActionPerformed
        frmPeticion frm = new frmPeticion();
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnPeticionActionPerformed

    private void btnProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProveedorActionPerformed
        // TODO add your handling code here:
        frmProveedor frm = new frmProveedor();
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnProveedorActionPerformed

    private void btnReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportesActionPerformed
        frmReportes frm = new frmReportes();
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnReportesActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        frmInicio frm = new frmInicio();
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void cmbMotivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMotivosActionPerformed
        // TODO add your handling code here:
             motivoSeleccionado();
    }//GEN-LAST:event_cmbMotivosActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         limpiarCampos();
         
           frmMenu frm = new frmMenu();
        frm.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jButton3ActionPerformed

    
    private String rutaImagen; // Variable para almacenar la ruta de la imagen
    private String carpetaImagenes = "imagenes_devoluciones"; // Nombre de la carpeta para guardar imágenes


    public void seleccionarImagen() {
JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Seleccionar Imagen");

    // Filtro para aceptar solo imágenes
    FileNameExtensionFilter filtro = new FileNameExtensionFilter("Imágenes", "png", "jpg", "jpeg");
    fileChooser.setFileFilter(filtro);

    int seleccion = fileChooser.showOpenDialog(this);

    if (seleccion == JFileChooser.APPROVE_OPTION) {
        File archivoSeleccionado = fileChooser.getSelectedFile();

        // Crear la carpeta si no existe
        File carpeta = new File(carpetaImagenes);
        if (!carpeta.exists()) {
            carpeta.mkdir(); // Crear la carpeta
        }

        // Copiar la imagen a la carpeta del proyecto
        try {
            File archivoDestino = new File(carpetaImagenes + File.separator + archivoSeleccionado.getName());
            Files.copy(archivoSeleccionado.toPath(), archivoDestino.toPath(), StandardCopyOption.REPLACE_EXISTING);

            // Guardar la ruta relativa de la imagen
            //rutaImagen = archivoDestino.getName();
            // Guardar la ruta de la imagen en la variable de instancia
            rutaImagen = archivoDestino.getAbsolutePath(); // Asignar la ruta completa

            // Mostrar la imagen en el JLabel
            ImageIcon imagen = new ImageIcon(archivoDestino.getAbsolutePath());
            Image imgEscalada = imagen.getImage().getScaledInstance(lblImagen.getWidth(), lblImagen.getHeight(), Image.SCALE_SMOOTH);
            lblImagen.setIcon(new ImageIcon(imgEscalada));
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al copiar la imagen.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }

    
  public void registrarDevolucion() {
    Connection conn = DatabaseConnection.getConnection();
    
    if (conn != null) {
        try {
 
            
           String sql = "INSERT INTO Devoluciones (id_producto, cantidad, motivo, imagen) VALUES (?, ?, ?, ?)";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, obtenerIdProducto(txtProducto.getText())); // Asegurar que sea id_producto
            stmt.setInt(2, Integer.parseInt(txtCantidad.getText()));
            stmt.setString(3, txtMotivo.getText());
            stmt.setString(4, rutaImagen); // Ruta de la imagen
            stmt.executeUpdate();
            JOptionPane.showMessageDialog(null, "Devolución registrada correctamente.");
            
            stmt.close();
            conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al registrar devolución: " + e.getMessage());
        }
    }
}
public int obtenerIdProducto(String nombreProducto) {
    int idProducto = -1; // Valor por defecto en caso de no encontrar el producto
    String sql = "SELECT id_producto FROM Productos WHERE nombre = ?";
    
    try (Connection conn = DatabaseConnection.getConnection();
         PreparedStatement stmt = conn.prepareStatement(sql)) {
        
        stmt.setString(1, nombreProducto);
        ResultSet rs = stmt.executeQuery();
        
        if (rs.next()) {
            idProducto = rs.getInt("id_producto");
        } else {
            System.out.println("⚠ Producto no encontrado en la base de datos.");
        }
    } catch (SQLException e) {
        System.err.println("❌ Error al obtener ID del producto: " + e.getMessage());
    }
    
    return idProducto;
}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPeticion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPeticion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPeticion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPeticion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPeticion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelMenu;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnImagen;
    private javax.swing.JButton btnInventario;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnPeticion;
    private javax.swing.JButton btnProveedor;
    private javax.swing.JButton btnReportes;
    private javax.swing.JComboBox<String> cmbMotivos;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbCantidad;
    private javax.swing.JLabel lbFecha;
    private javax.swing.JLabel lbMotivo;
    private javax.swing.JLabel lbUsuario;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextArea txtMotivo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtProducto;
    private javax.swing.JTextField txtProveedor;
    // End of variables declaration//GEN-END:variables
}
