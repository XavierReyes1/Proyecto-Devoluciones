/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Reportes;

import Clases.DatabaseConnection;
import Clases.userClass;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.dynamicreports.jasper.builder.JasperReportBuilder;
import net.sf.dynamicreports.report.builder.DynamicReports;
import net.sf.dynamicreports.report.builder.column.Columns;
import net.sf.dynamicreports.report.builder.component.Components;
import net.sf.dynamicreports.report.builder.datatype.DataTypes;
import net.sf.dynamicreports.report.builder.style.StyleBuilder;
import net.sf.dynamicreports.report.constant.HorizontalAlignment;
import net.sf.dynamicreports.report.constant.PageOrientation;
import net.sf.dynamicreports.report.constant.PageType;
import net.sf.dynamicreports.report.constant.SplitType;
import net.sf.dynamicreports.report.constant.VerticalAlignment;
import net.sf.dynamicreports.report.datasource.DRDataSource;
import net.sf.dynamicreports.report.exception.DRException;

/**
 *
 * @author Axel Reyes
 */
public class frmReporte_nc extends javax.swing.JFrame {

    /**
     * Creates new form frmReporte_nc
     */
    public frmReporte_nc() {
        
        initComponents();
        cargarComboBox();
        cargarReporte();
        configurarComboBox();
         lbUsuario.setText(userClass.getUsername());
          FechaActual();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbAno = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbUsuario = new javax.swing.JLabel();
        labelFecha = new javax.swing.JLabel();
        lbTitulo = new javax.swing.JLabel();
        cmbMes = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tReporte = new javax.swing.JTable();
        btnReporte = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cmbAno.setToolTipText("");

        jLabel5.setText("Año");

        jLabel6.setText("Mes");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logo.jpg"))); // NOI18N

        jLabel2.setText("Nombre :");

        jLabel3.setText("Fecha");

        lbUsuario.setText("jLabel4");

        labelFecha.setText("jLabel4");

        lbTitulo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbTitulo.setText("REPORTE DE N/C EMITIDAS POR LOS PROVEEDORES  ");

        tReporte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tReporte.setEnabled(false);
        jScrollPane1.setViewportView(tReporte);

        btnReporte.setText("Reporte");
        btnReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbUsuario)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cmbMes, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(146, 146, 146)
                                .addComponent(jLabel5)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelFecha)
                            .addComponent(cmbAno, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(lbTitulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReporte)
                        .addGap(35, 35, 35))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(lbUsuario)
                            .addComponent(labelFecha))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnReporte))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteActionPerformed
        // TODO add your handling code here:
        
       try {
        // 1. Configurar el informe con hoja A4 (orientación vertical) y márgenes
        JasperReportBuilder report = DynamicReports.report();
        report.setPageFormat(PageType.A4, PageOrientation.PORTRAIT)
              .setPageMargin(DynamicReports.margin(10));

        // 2. Definir estilos
        // Estilo con bordes
        StyleBuilder borderedStyle = DynamicReports.stl.style()
            .setBorder(DynamicReports.stl.pen1Point());
        
        // Estilo para encabezados de la tabla
        StyleBuilder headerStyle = DynamicReports.stl.style(borderedStyle)
            .setHorizontalAlignment(HorizontalAlignment.CENTER)
            .setVerticalAlignment(VerticalAlignment.MIDDLE)
            .setBackgroundColor(java.awt.Color.LIGHT_GRAY)
            .setFontSize(12)
            .setBold(true);
        
        // Estilo para los textos del encabezado 
        StyleBuilder infoStyle = DynamicReports.stl.style()
            .setFontSize(10)
            .setBold(false);

        // Estilo para centrar el contenido de las celdas de la tabla
        StyleBuilder cellStyle = DynamicReports.stl.style(borderedStyle)
            .setHorizontalAlignment(HorizontalAlignment.CENTER)
            .setVerticalAlignment(VerticalAlignment.MIDDLE)
              .setPadding(5);
            
        //'ID','Proveedor','Descripción','CAI','Monto','Fecha'
        // 3. Definir las columnas de la tabla
        String[] columnNames = {"ID", "Proveedor", "Descripción", "CAI", "Total Monto"};
        int[] columnWidths = {60, 130, 180, 110, 80};

        for (int i = 0; i < columnNames.length; i++) {
            report.addColumn(
                Columns.column(columnNames[i], columnNames[i], DataTypes.stringType())
                      .setFixedWidth(columnWidths[i])
                      .setStyle(cellStyle) // Aplicar el estilo de celda centrado
                      .setTitleStyle(headerStyle)
            );
        }

        // 4. Crear un DRDataSource con los datos de la tabla
        DRDataSource dataSource = new DRDataSource(
           "ID", "Proveedor", "Descripción", "CAI", "Total Monto"
        );

        // Llenar el data source con los datos de la tabla
        for (int i = 0; i < tReporte.getRowCount(); i++) {
            dataSource.add(
                tReporte.getValueAt(i, 0).toString(),
                tReporte.getValueAt(i, 1).toString(),
                tReporte.getValueAt(i, 2).toString(),
                tReporte.getValueAt(i, 3).toString(),
                tReporte.getValueAt(i, 4).toString()
            );
        }
        report.setDataSource(dataSource);

        // 5. Construir el encabezado con logo a la izquierda y datos a la derecha
        try {
            // Cargar la imagen del logo
            java.awt.image.BufferedImage logo = javax.imageio.ImageIO.read(
                    getClass().getResourceAsStream("/imagenes/logo.jpg"));

            // Encabezado (logo + datos de empresa, fecha, usuario)
            report.title(
                Components.horizontalList() // Contenedor horizontal
                    .add(
                        // LOGO
                        Components.image(logo)
                                  .setFixedDimension(60, 60) // Ajusta el tamaño del logo
                                  .setStyle(DynamicReports.stl.style().setPadding(5)),
                        Components.horizontalGap(10), // Espacio entre logo y texto
                        // Bloque vertical con la info (Empresa, Fecha, Usuario)
                        Components.verticalList(
                           
                            Components.text("                                                                                                                                                                            "
                                    + "Empresa: SuperMercado Abigail"+"                                          Fecha: " + labelFecha.getText())
                                      .setStyle(infoStyle),
                            Components.text("Usuario: " + lbUsuario.getText())
                                      .setStyle(infoStyle)
                        )
                    )
                    // Opcional: bordes alrededor de la sección de encabezado
                    .setStyle(DynamicReports.stl.style().setBorder(DynamicReports.stl.penThin()))
            );

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, 
                "Error al cargar el logo: " + ex.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
        }

        // 6. Título principal centrado debajo del encabezado
        report.title(
            Components.verticalGap(5), // Un poco de separación
            Components.text(lbTitulo.getText()+cmbMes.getSelectedItem().toString().toUpperCase()+" "+ cmbAno.getSelectedItem().toString())
                      .setStyle(DynamicReports.stl.style()
                                .setFontSize(14)
                                .setBold(true))
                      .setHorizontalAlignment(HorizontalAlignment.CENTER),
            Components.verticalGap(5),
            
            Components.line(),Components.text("        ")
              
        );

        // 7. Pie de página con información de generación y número de página
        report.pageFooter(
              Components.horizontalList(
                  Components.pageNumber()
                      .setStyle(DynamicReports.stl.style()
                          .setFontSize(8)
                          .setHorizontalAlignment(HorizontalAlignment.RIGHT) // Alinea a la derecha
                      )
                    )
                );

        // 8. Evitar que se divida la banda de detalle entre páginas
        report.setDetailStyle(DynamicReports.stl.style()
          .setHorizontalAlignment(HorizontalAlignment.CENTER));


        report.setDetailSplitType(SplitType.PREVENT);

        // 9. Mostrar el informe en el visor gráfico sin cerrar el programa
        report.show(false); // 'false' evita que el programa se cierre

    } catch (DRException e) {
        JOptionPane.showMessageDialog(this, 
            "Error: " + e.getMessage(), 
            "Error", 
            JOptionPane.ERROR_MESSAGE);
    }


        
        
        
        
    }//GEN-LAST:event_btnReporteActionPerformed
private void FechaActual(){
              Date fechaActual = new Date();

        // Formatear la fecha
        SimpleDateFormat formatter = new SimpleDateFormat("EEEE, dd MMMM yyyy");
        String fechaFormateada = formatter.format(fechaActual);

        // Crear el JLabel con la fecha
         labelFecha.setText(fechaFormateada);
        }
    private void configurarComboBox() {
    // Agregar un ItemListener a cmbCategoria
    cmbAno.addItemListener(new ItemListener() {
    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getStateChange() == ItemEvent.SELECTED) {
            cargarReporte();
        }
    }
});

cmbMes.addItemListener(new ItemListener() {
    @Override
    public void itemStateChanged(ItemEvent e) {
        if (e.getStateChange() == ItemEvent.SELECTED) {
            cargarReporte();
        }
    }
});
}

private void cargarComboBox() {
    // Cargar años en cmbAno
    String sqlAnios = "SELECT DISTINCT año FROM vista_reporte_nc ORDER BY año ASC";
    try (Connection conn = DatabaseConnection.getConnection();
         Statement stmt = conn.createStatement();
         ResultSet rs = stmt.executeQuery(sqlAnios)) {

        while (rs.next()) {
            cmbAno.addItem(rs.getString("año"));
        }
    } catch (SQLException e) {
        e.printStackTrace();
        javax.swing.JOptionPane.showMessageDialog(this, "Error al cargar años: " + e.getMessage());
    }

    // Cargar meses (nombres)
    String[] meses = {"Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", 
                      "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"};
    for (String mes : meses) {
        cmbMes.addItem(mes);
    }

}

private void cargarReporte() {
    DefaultTableModel model = new DefaultTableModel(
        new Object[][] {},
        new String[] {    
            "ID ", 
            "Proveedor", 
            "descripcion", 
            "CAI", 
            "Monto"
        });

    tReporte.setModel(model);
    model.setRowCount(0); // Limpiar la tabla antes de cargar nuevos datos

    int año = Integer.parseInt(cmbAno.getSelectedItem().toString());
    String mesSeleccionado = cmbMes.getSelectedItem().toString();
    
    // No necesitas convertir el mes a número, ya que la vista devuelve el nombre del mes
    String sql1 = "SELECT * FROM vista_reporte_nc WHERE año = ? AND mes = ?";
    
    try (Connection conn = DatabaseConnection.getConnection();
         PreparedStatement pstmt = conn.prepareStatement(sql1)) {

        pstmt.setInt(1, año);
        pstmt.setString(2, mesSeleccionado);  // Usar el nombre del mes directamente
       
        try (ResultSet rs = pstmt.executeQuery()) {
            int rowCount = 0;
            while (rs.next()) {
                rowCount++;
                int idNc = rs.getInt("id_nc");
                String nombreProveedor = rs.getString("nombre_proveedor");
                String descripcion = rs.getString("descripcion_nv");
                String numero_cai = rs.getString("numero_cai");
               
                double monto = rs.getDouble("monto_nc");
                
                model.addRow(new Object[]{idNc, nombreProveedor, descripcion, numero_cai, monto});
            }

            if (rowCount == 0) {
                JOptionPane.showMessageDialog(this, "No se encontraron datos para el Año y Mes seleccionados.");
            } else {
                System.out.println("Se cargaron " + rowCount + " filas en la tabla.");
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al cargar el reporte: " + e.getMessage());
    }
}

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmReporte_nc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmReporte_nc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmReporte_nc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmReporte_nc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            
                new frmReporte_nc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReporte;
    private javax.swing.JComboBox<String> cmbAno;
    private javax.swing.JComboBox<String> cmbMes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelFecha;
    private javax.swing.JLabel lbTitulo;
    private javax.swing.JLabel lbUsuario;
    private javax.swing.JTable tReporte;
    // End of variables declaration//GEN-END:variables
}
